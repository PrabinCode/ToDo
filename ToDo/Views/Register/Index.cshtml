@model ToDo.Models.UserModel

@{
    ViewBag.Title = "Register";
}

<h2>Create User</h2>

@using (Html.BeginForm("Index", "Register", FormMethod.Post, new {id = "registerForm", @class = "register-form common-form"}))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" oninput='ConfirmPassword.setCustomValidity(ConfirmPassword.value != Password.value ? "Passwords do not match." : "")'>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger", id = "PasswordError"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecretWord, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecretWord, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SecretWord, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="btnSubmit"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" id="ErrorMessage" style="color: red; display: none; margin-top: -11px;"></div>
            <div class="col-md-offset-2 col-md-10" id="SuccessMessage" style="color: red; display: none; margin-top: -11px;"></div>
        </div>
        <hr/>
        <div class="col-md-offset-2 col-md-10">
            @Html.ActionLink("Login", "Index", "Login")
        </div>

    </div>
}



@section scripts{
    @Scripts.Render("~/bundles/jqueryval");
    <script type="text/javascript">
        $('#btnSubmit').click(function(e) {
            e.preventDefault();
            debugger;
            var Name = $("[name='Name']").val();
            var Email = $("[name='Email']").val();
            var Password = $("[name='Password']").val();
            var ConfirmPassword = $("[name='ConfirmPassword']").val();
            var SecretWord = $("[name='SecretWord']").val();

            if (Email != "" || Email != null || Email.trim != "") {
                var dataToPost = {
                    Name: Name,
                    Email: Email,
                    Password: Password,
                    ConfirmPassword: ConfirmPassword,
                    SecretWord: SecretWord
                };

                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("Index", "Register")',
                    type: "POST",
                    data: dataToPost,
                    async: false,
                    success: function(data) {

                        if (data.responseCode == "200") {
                            $("#ErrorMessage").hide();
                            $("#SuccessMessage").html("");
                            $("#SuccessMessage").append(data.responseText);
                            $("#SuccessMessage").hide();
                            var url = '@Url.Action("Index", "Login")';
                            window.location.href = url;

                        } else {
                            $("#ErrorMessage").html("");
                            $("#ErrorMessage").append(data.responseText);
                            $("#ErrorMessage").show();
                            $("#SuccessMessage").hide();
                        }
                    },
                });

            }
        });
    </script>

}