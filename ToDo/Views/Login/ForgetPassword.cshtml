@model ToDo.Models.LoginModel

@{
    /**/

    ViewBag.Title = "ForgetPassword";
}

<h2>ForgetPassword</h2>

@using (Html.BeginForm("ForgetPassword", "Login", FormMethod.Post, new {id = "ForgetPasswordForm", @class = "ForgetPassword-form common-form"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group CheckField">
            @Html.LabelFor(model => model.Email, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control", id = "Email"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group CheckField">
            <label class="control-label col-md-2">Secret Word:</label>
            <div class="col-md-10">
                <input type="text" class="form-control" id="SecretWord" name="txtSecretWord"/>
            </div>
            <div class="form-control" id="SecretWordErr" style="color: red; display: none; margin-top: -11px;"></div>
        </div>

        <h3 class="NewPassword" style="display: none">
            <label>Enter New Password:</label>
        </h3>
        <div class="form-group NewPassword" style="display: none">
            @Html.LabelFor(model => model.Password, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group NewPassword" style="display: none">
            @Html.LabelFor(model => model.ConfirmPassword, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Check" class="btn btn-default" id="btnSubmit"/>
                <input type="submit" value="Change" class="btn btn-default" id="btnChange" style="display: none"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" id="ErrorMessage" style="color: red; display: none; margin-top: -11px;"></div>
            <div class="col-md-offset-2 col-md-10" id="SuccessMessage" style="color: red; display: none; margin-top: -11px;"></div>
        </div>
        <br/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Login", "Index")
            </div>
            <br/>
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Register", "Index", "Register")
            </div>
        </div>
    </div>
}

@section scripts{

    <script type="text/javascript">

        $('#btnSubmit').click(function(e) {
            e.preventDefault();
            debugger;
            var Email = $("[name='Email']").val();
            var SecretWord = $("[name='txtSecretWord']").val();
            if ((Email != "") && (SecretWord != "")) {
                $("#SecretWordErr").hide();
                var dataToPost = {
                    Email: Email,
                    SecretWord: SecretWord
                };

                e.preventDefault(); //prevent the default action
                $.ajax({
                    url: '@Url.Action("ForgetPasswordChecker", "Login")',
                    type: "POST",
                    data: dataToPost,
                    async: false,
                    success: function(data) {

                        if (data.responseCode == "200") {
                            $(".NewPassword").show();
                            $("#btnChange").show();

                            $(".CheckField").hide();
                            $("#btnSubmit").hide();
                            $("#ErrorMessage").hide();
                            @*var url = '@Url.Action("Index", "ToDoList")';
                            window.location.href = url;*@

                        } else {
                            $("#ErrorMessage").html("");
                            $("#ErrorMessage").append(data.responseText);
                            $("#ErrorMessage").show();
                            $("#SuccessMessage").hide();
                        }
                    },
                    //error: function (jqXHR, textStatus, errorThrown) {
                    //    alert('Failed to retrieve.');
                    //    $("#ErrorMessage").show().delay(2000);

                    //    $("#ErrorMessage").hide().delay(2000);


                    //},

                });

            }
            //else {

            //if ((SecretWord.trim() == "")) {
            //    $("#SecretWordErr").html("");
            //    $("#SecretWordErr").append("<small>" + "Required and cannot be empty" + "</small>");
            //    $("#SecretWordErr").show();
            //}
            //else {
            //    $("#SecretWordErr").hide();
            //}

            //}
        });
    </script>

}